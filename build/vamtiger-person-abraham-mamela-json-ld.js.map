{"version":3,"file":"vamtiger-person-abraham-mamela-json-ld.js","sources":["../source/types.ts","../source/json-ld.ts","../source/load-script.ts","../source/vamtiger-person-abraham-mamela-json-ld.ts"],"sourcesContent":["export enum ScriptType {\n    jsonLd = 'application/ld+json',\n    json = 'application/json'\n}\n\nexport interface IAnyObject {\n    [key: string]: any;\n}\n\nexport interface ILoadScript {\n    type: ScriptType;\n    url: string;\n    data: IAnyObject;\n}\n\nexport const url = 'https://cdn.jsdelivr.net/npm/vamtiger-person-abraham-mamela-json-ld@latest/build/vamtiger-person-abraham-mamela-json-ld.js';","const jsonLd = {\n    '@context': 'http://schema.org',\n    '@type': 'Person',\n    name: 'Abraham Mamela',\n    description: `\n        Abraham Mamela is a Social Entrepreneurship, Science Communication\n        and Public Engagement Professional from Botswana.\n\n        He is the founder and CEO of Infers Group, and proprietor of the\n        creative concept of Arting Health, a collaborative project between\n        Artists, Scientists, Institutions and Communities.\n    `,\n    disambiguatingDescription: 'Creative Concept for Arting Health, founder and CEO of Infers Group',\n    jobTitle: 'Founder and CEO of Infers Group',\n    image: 'https://unpkg.com/vamtiger-person-abraham-mamela-json-ld/vamtiger-person-abraham-mamela-json-ld.jpg'\n};\n\nexport default [\n    jsonLd\n];","import {\n    ILoadScript\n} from './types';\n\nconst { stringify } = JSON;\n\nexport default function({ type, url: jsonLd, data: currentData }: ILoadScript) {\n    const { head } = document;\n    const script = document.createElement('script');\n    const data = Object.keys(currentData).length && currentData;\n\n    script.type = type;\n\n    script.dataset.jsonLd = jsonLd;\n\n    if (data) {\n        script.innerHTML = stringify(data).trim();\n    }\n\n    script.innerHTML && head.appendChild(script);\n}","import {\n    ScriptType,\n    url\n} from './types';\nimport jsonLd from './json-ld';\nimport json from './json';\nimport loadScript from './load-script';\n\nconst jsonLdParams = jsonLd.map(data => ({\n    url,\n    type: ScriptType.jsonLd,\n    data\n}));\nconst jsonParams = {\n    url,\n    type: ScriptType.json,\n    data: json\n};\nconst scriptParams = [\n    ...jsonLdParams,\n    jsonParams\n];\n\nscriptParams.forEach(loadScript);\n"],"names":["ScriptType","url","@context","@type","name","description","disambiguatingDescription","jobTitle","image","stringify","jsonLdParams","jsonLd","map","data","type","jsonParams","json","forEach","_a","currentData","head","script","document","createElement","Object","keys","length","dataset","innerHTML","trim","appendChild"],"mappings":"yBAAA,IAAYA,GAAZ,SAAYA,GACRA,+BACAA,0BAFJ,CAAYA,IAAAA,OAeZ,IAAaC,EAAM,iICdfC,WAAY,oBACZC,QAAS,SACTC,KAAM,iBACNC,YAAa,oWAQbC,0BAA2B,sEAC3BC,SAAU,kCACVC,MAAO,wGCVHC,iBCIR,IAAMC,EAAeC,EAAOC,IAAI,SAAAC,GAAQ,OACpCZ,MACAa,KAAMd,EAAWW,OACjBE,UAEEE,GACFd,MACAa,KAAMd,EAAWgB,KACjBH,SAGGH,UACHK,IAGSE,QDjBb,SAAwBC,OAAEJ,SAAMH,QAAaQ,SACjCC,gBACFC,EAASC,SAASC,cAAc,UAChCV,EAAOW,OAAOC,KAAKN,GAAaO,QAAUP,EAEhDE,EAAOP,KAAOA,EAEdO,EAAOM,QAAQhB,OAASA,EAEpBE,IACAQ,EAAOO,UAAYnB,EAAUI,GAAMgB,QAGvCR,EAAOO,WAAaR,EAAKU,YAAYT"}